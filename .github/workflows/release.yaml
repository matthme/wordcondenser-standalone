name: "publish"
on:
  push:
    branches:
      - release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-11]
        platform: [windows-2019, macos-11, ubuntu-20.04]
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.13

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
          target: aarch64-apple-darwin
      - name: install Go stable
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
      - name: install app dependencies and info
        run: npm install && npm run tauri info

      - name: setup binaries (Windows only)
        if: matrix.platform == 'windows-2019'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          $LkPath = Get-Command lair-keystore | Select-Object -ExpandProperty Definition
          Copy-Item $LkPath -Destination src-tauri/bins/lair-keystore-wc-v0.3.0-x86_64-pc-windows-msvc.exe

          cargo install holochain --version 0.1.6 --locked --features sqlite-encrypted
          $HcPath = Get-Command holochain | Select-Object -ExpandProperty Definition
          Copy-Item $HcPath -Destination src-tauri/bins/holochain-wc-v0.1.6-x86_64-pc-windows-msvc.exe

      - name: setup binaries (macos only)
        if: matrix.platform == 'macos-11'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-wc-v0.3.0-x86_64-apple-darwin

          cargo install holochain --version 0.1.6 --locked --features sqlite-encrypted
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-wc-v0.1.6-x86_64-apple-darwin


      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libcanberra-gtk-module libcanberra-gtk3-module build-essential curl wget libssl-dev libgtk-3-dev squashfs-tools libgtksourceview-3.0-dev libappindicator3-dev patchelf librsvg2-dev ayatana-indicator-application


      - name: setup binaries (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          mkdir src-tauri/bins

          cargo install --version 0.3.0 lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-wc-v0.3.0-x86_64-unknown-linux-gnu

          cargo install holochain --version 0.1.6 --locked --features sqlite-encrypted
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-wc-v0.1.6-x86_64-unknown-linux-gnu

      - name: generate dist folder
        run: npm run dist

      - name: build the app
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: src-tauri # specifying to prevent action from looking for artifacts in crates/hc_launch/src-tauri
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Word Condenser v__VERSION__"
          releaseBody: "See assets below to download and install this version."
          releaseDraft: true
          prerelease: true
          args: --verbose


      - name: setup universal binaries (macos only)
        if: matrix.platform == 'macos-11'
        run: |

          cargo install --version 0.3.0 --target aarch64-apple-darwin lair_keystore
          LAIR_PATH=$(which lair-keystore)
          cp $LAIR_PATH src-tauri/bins/lair-keystore-wc-v0.3.0-aarch64-apple-darwin

          # create universal lair binary
          lipo -create src-tauri/bins/lair-keystore-wc-v0.3.0-x86_64-apple-darwin src-tauri/bins/lair-keystore-wc-v0.3.0-aarch64-apple-darwin -output src-tauri/bins/lair-keystore-wc-v0.3.0-universal-apple-darwin


          cargo install holochain --version 0.1.6 --target aarch64-apple-darwin --locked --features sqlite-encrypted
          HOLOCHAIN_PATH=$(which holochain)
          cp $HOLOCHAIN_PATH src-tauri/bins/holochain-wc-v0.1.6-aarch64-apple-darwin

          # create universal holochain binary
          lipo -create src-tauri/bins/holochain-wc-v0.1.6-x86_64-apple-darwin src-tauri/bins/holochain-wc-v0.1.6-aarch64-apple-darwin -output src-tauri/bins/holochain-wc-v0.1.6-universal-apple-darwin

      - name: build the app for universal-apple-darwin (macos only)
        if: matrix.platform == 'macos-11'
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          projectPath: src-tauri # specifying to prevent action from looking for artifacts in crates/hc_launch/src-tauri
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "Word Condenser v__VERSION__"
          releaseBody: "See assets below to download and install this version."
          releaseDraft: true
          prerelease: true
          # if we're on macos, we need to build a universal binary for x86_64 and arm64
          args: ${{ matrix.platform == 'macos-11' && '--verbose --target universal-apple-darwin' || '--verbose' }}